// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Sat, 17 Sep 2022 14:28:28 BST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package decklink

/*
#include <stdint.h>
#include "DeckLinkAPI.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"













































// __builtin_strcspn function as declared in go-decklink/<builtin>:49
func __builtin_strcspn(_ string, _ string) uint32{
 = safeString()
c, cAllocMap := unpackPString()
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_strcspn(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (uint32)(__ret)
return __v
}


// __builtin_strlen function as declared in go-decklink/<builtin>:50
func __builtin_strlen(_ string) uint32{
 = safeString()
c, cAllocMap := unpackPString()
__ret := C.__builtin_strlen(c)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (uint32)(__ret)
return __v
}


// __builtin_strspn function as declared in go-decklink/<builtin>:51
func __builtin_strspn(_ string, _ string) uint32{
 = safeString()
c, cAllocMap := unpackPString()
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_strspn(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (uint32)(__ret)
return __v
}


// __builtin_bswap16 function as declared in go-decklink/<builtin>:52
func __builtin_bswap16(_ uint16) uint16{
c, cAllocMap := (C.ushort)(), cgoAllocsUnknown
__ret := C.__builtin_bswap16(c)
runtime.KeepAlive(cAllocMap)
__v := (uint16)(__ret)
return __v
}


// __builtin_bswap32 function as declared in go-decklink/<builtin>:53
func __builtin_bswap32(_ uint32) uint32{
c, cAllocMap := (C.uint)(), cgoAllocsUnknown
__ret := C.__builtin_bswap32(c)
runtime.KeepAlive(cAllocMap)
__v := (uint32)(__ret)
return __v
}


// __builtin_bswap64 function as declared in go-decklink/<builtin>:54
func __builtin_bswap64(_ uint32) uint32{
c, cAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_bswap64(c)
runtime.KeepAlive(cAllocMap)
__v := (uint32)(__ret)
return __v
}


// __builtin_strcasestr function as declared in go-decklink/<builtin>:55
func __builtin_strcasestr(_ string, _ string) *byte{
 = safeString()
c, cAllocMap := unpackPString()
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_strcasestr(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := *(**byte)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_strcat function as declared in go-decklink/<builtin>:56
func __builtin_strcat(_ []byte, _ string) *byte{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_strcat(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := *(**byte)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_strchr function as declared in go-decklink/<builtin>:57
func __builtin_strchr(_ string, _ int32) *byte{
 = safeString()
cc, ccAllocMap := unpackPString()
ccc, cccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_strchr(cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
__v := *(**byte)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_strcpy function as declared in go-decklink/<builtin>:58
func __builtin_strcpy(_ []byte, _ string) *byte{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_strcpy(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := *(**byte)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_strncat function as declared in go-decklink/<builtin>:59
func __builtin_strncat(_ []byte, _ string, _ uint32) *byte{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
 = safeString()
cc, ccAllocMap := unpackPString()
ccc, cccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_strncat(c, cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := *(**byte)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_strncpy function as declared in go-decklink/<builtin>:60
func __builtin_strncpy(_ []byte, _ string, _ uint32) *byte{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
 = safeString()
cc, ccAllocMap := unpackPString()
ccc, cccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_strncpy(c, cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := *(**byte)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_strpbrk function as declared in go-decklink/<builtin>:61
func __builtin_strpbrk(_ string, _ string) *byte{
 = safeString()
c, cAllocMap := unpackPString()
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_strpbrk(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := *(**byte)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_strrchr function as declared in go-decklink/<builtin>:62
func __builtin_strrchr(_ string, _ int32) *byte{
 = safeString()
cc, ccAllocMap := unpackPString()
ccc, cccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_strrchr(cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
__v := *(**byte)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_strstr function as declared in go-decklink/<builtin>:63
func __builtin_strstr(_ string, _ string) *byte{
 = safeString()
c, cAllocMap := unpackPString()
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_strstr(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := *(**byte)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_acos function as declared in go-decklink/<builtin>:64
func __builtin_acos(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_acos(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_asin function as declared in go-decklink/<builtin>:65
func __builtin_asin(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_asin(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_atan function as declared in go-decklink/<builtin>:66
func __builtin_atan(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_atan(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_atan2 function as declared in go-decklink/<builtin>:67
func __builtin_atan2(_ float64, _ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_atan2(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_ceil function as declared in go-decklink/<builtin>:68
func __builtin_ceil(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_ceil(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_copysign function as declared in go-decklink/<builtin>:69
func __builtin_copysign(_ float64, _ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_copysign(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_cos function as declared in go-decklink/<builtin>:70
func __builtin_cos(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_cos(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_cosh function as declared in go-decklink/<builtin>:71
func __builtin_cosh(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_cosh(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_exp function as declared in go-decklink/<builtin>:72
func __builtin_exp(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_exp(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_fabs function as declared in go-decklink/<builtin>:73
func __builtin_fabs(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_fabs(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_floor function as declared in go-decklink/<builtin>:74
func __builtin_floor(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_floor(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_fmod function as declared in go-decklink/<builtin>:75
func __builtin_fmod(_ float64, _ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_fmod(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_frexp function as declared in go-decklink/<builtin>:76
func __builtin_frexp(_ float64, _ []int32) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
__ret := C.__builtin_frexp(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_huge_val function as declared in go-decklink/<builtin>:77
func __builtin_huge_val() float64{
__ret := C.__builtin_huge_val()
__v := (float64)(__ret)
return __v
}


// __builtin_inf function as declared in go-decklink/<builtin>:78
func __builtin_inf() float64{
__ret := C.__builtin_inf()
__v := (float64)(__ret)
return __v
}


// __builtin_ldexp function as declared in go-decklink/<builtin>:79
func __builtin_ldexp(_ float64, _ int32) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_ldexp(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_log function as declared in go-decklink/<builtin>:80
func __builtin_log(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_log(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_log10 function as declared in go-decklink/<builtin>:81
func __builtin_log10(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_log10(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_modf function as declared in go-decklink/<builtin>:82
func __builtin_modf(_ float64, _ []float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
__ret := C.__builtin_modf(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_nan function as declared in go-decklink/<builtin>:83
func __builtin_nan(_ []byte) float64{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
__ret := C.__builtin_nan(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_pow function as declared in go-decklink/<builtin>:84
func __builtin_pow(_ float64, _ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_pow(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_sin function as declared in go-decklink/<builtin>:85
func __builtin_sin(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_sin(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_sinh function as declared in go-decklink/<builtin>:86
func __builtin_sinh(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_sinh(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_sqrt function as declared in go-decklink/<builtin>:87
func __builtin_sqrt(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_sqrt(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_tan function as declared in go-decklink/<builtin>:88
func __builtin_tan(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_tan(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_tanh function as declared in go-decklink/<builtin>:89
func __builtin_tanh(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_tanh(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_acosf function as declared in go-decklink/<builtin>:90
func __builtin_acosf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_acosf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_asinf function as declared in go-decklink/<builtin>:91
func __builtin_asinf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_asinf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_atan2f function as declared in go-decklink/<builtin>:92
func __builtin_atan2f(_ float32, _ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
cc, ccAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_atan2f(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_atanf function as declared in go-decklink/<builtin>:93
func __builtin_atanf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_atanf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_ceilf function as declared in go-decklink/<builtin>:94
func __builtin_ceilf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_ceilf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_copysignf function as declared in go-decklink/<builtin>:95
func __builtin_copysignf(_ float32, _ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
cc, ccAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_copysignf(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_cosf function as declared in go-decklink/<builtin>:96
func __builtin_cosf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_cosf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_coshf function as declared in go-decklink/<builtin>:97
func __builtin_coshf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_coshf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_expf function as declared in go-decklink/<builtin>:98
func __builtin_expf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_expf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_fabsf function as declared in go-decklink/<builtin>:99
func __builtin_fabsf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_fabsf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_floorf function as declared in go-decklink/<builtin>:100
func __builtin_floorf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_floorf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_fmodf function as declared in go-decklink/<builtin>:101
func __builtin_fmodf(_ float32, _ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
cc, ccAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_fmodf(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_frexpf function as declared in go-decklink/<builtin>:102
func __builtin_frexpf(_ float32, _ []int32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
cc, ccAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
__ret := C.__builtin_frexpf(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_huge_valf function as declared in go-decklink/<builtin>:103
func __builtin_huge_valf() float32{
__ret := C.__builtin_huge_valf()
__v := (float32)(__ret)
return __v
}


// __builtin_inff function as declared in go-decklink/<builtin>:104
func __builtin_inff() float32{
__ret := C.__builtin_inff()
__v := (float32)(__ret)
return __v
}


// __builtin_ldexpf function as declared in go-decklink/<builtin>:105
func __builtin_ldexpf(_ float32, _ int32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_ldexpf(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_log10f function as declared in go-decklink/<builtin>:106
func __builtin_log10f(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_log10f(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_logf function as declared in go-decklink/<builtin>:107
func __builtin_logf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_logf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_modff function as declared in go-decklink/<builtin>:108
func __builtin_modff(_ float32, _ []float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
cc, ccAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
__ret := C.__builtin_modff(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_nanf function as declared in go-decklink/<builtin>:109
func __builtin_nanf(_ []byte) float32{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
__ret := C.__builtin_nanf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_powf function as declared in go-decklink/<builtin>:110
func __builtin_powf(_ float32, _ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
cc, ccAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_powf(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_sinf function as declared in go-decklink/<builtin>:111
func __builtin_sinf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_sinf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_sinhf function as declared in go-decklink/<builtin>:112
func __builtin_sinhf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_sinhf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_sqrtf function as declared in go-decklink/<builtin>:113
func __builtin_sqrtf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_sqrtf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_tanf function as declared in go-decklink/<builtin>:114
func __builtin_tanf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_tanf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin_tanhf function as declared in go-decklink/<builtin>:115
func __builtin_tanhf(_ float32) float32{
c, cAllocMap := (C.float)(), cgoAllocsUnknown
__ret := C.__builtin_tanhf(c)
runtime.KeepAlive(cAllocMap)
__v := (float32)(__ret)
return __v
}


// __builtin___sprintf_chk function as declared in go-decklink/<builtin>:116
func __builtin___sprintf_chk(_ []byte, _ int32, _ uint32, _ []byte) int32{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
ccc, cccAllocMap := (C.ulong)(), cgoAllocsUnknown
cccc, ccccAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
__ret := C.__builtin___sprintf_chk(c, cc, ccc, cccc)
runtime.KeepAlive(ccccAllocMap)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_abs function as declared in go-decklink/<builtin>:117
func __builtin_abs(_ int32) int32{
c, cAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_abs(c)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_dprintf function as declared in go-decklink/<builtin>:118
func __builtin_dprintf(_ int32, _ string) int32{
c, cAllocMap := (C.int)(), cgoAllocsUnknown
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_dprintf(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_fprintf function as declared in go-decklink/<builtin>:119
func __builtin_fprintf(_ unsafe.Pointer, _ string) int32{
c, cAllocMap := , cgoAllocsUnknown
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_fprintf(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_fputc function as declared in go-decklink/<builtin>:120
func __builtin_fputc(_ int32, _ unsafe.Pointer) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
ccc, cccAllocMap := , cgoAllocsUnknown
__ret := C.__builtin_fputc(cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_fputs function as declared in go-decklink/<builtin>:121
func __builtin_fputs(_ string, _ unsafe.Pointer) int32{
 = safeString()
c, cAllocMap := unpackPString()
cc, ccAllocMap := , cgoAllocsUnknown
__ret := C.__builtin_fputs(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_fscanf function as declared in go-decklink/<builtin>:122
func __builtin_fscanf(_ unsafe.Pointer, _ string) int32{
c, cAllocMap := , cgoAllocsUnknown
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_fscanf(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_isalnum function as declared in go-decklink/<builtin>:123
func __builtin_isalnum(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_isalnum(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_isalpha function as declared in go-decklink/<builtin>:124
func __builtin_isalpha(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_isalpha(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_isascii function as declared in go-decklink/<builtin>:125
func __builtin_isascii(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_isascii(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_isblank function as declared in go-decklink/<builtin>:126
func __builtin_isblank(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_isblank(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_iscntrl function as declared in go-decklink/<builtin>:127
func __builtin_iscntrl(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_iscntrl(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_isdigit function as declared in go-decklink/<builtin>:128
func __builtin_isdigit(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_isdigit(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_isgraph function as declared in go-decklink/<builtin>:129
func __builtin_isgraph(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_isgraph(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_islower function as declared in go-decklink/<builtin>:130
func __builtin_islower(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_islower(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_isprint function as declared in go-decklink/<builtin>:131
func __builtin_isprint(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_isprint(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_ispunct function as declared in go-decklink/<builtin>:132
func __builtin_ispunct(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_ispunct(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_isspace function as declared in go-decklink/<builtin>:133
func __builtin_isspace(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_isspace(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_isunordered function as declared in go-decklink/<builtin>:134
func __builtin_isunordered(_ float64, _ float64) int32{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_isunordered(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_isupper function as declared in go-decklink/<builtin>:135
func __builtin_isupper(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_isupper(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_isxdigit function as declared in go-decklink/<builtin>:136
func __builtin_isxdigit(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_isxdigit(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_memcmp function as declared in go-decklink/<builtin>:137
func __builtin_memcmp(_ unsafe.Pointer, _ unsafe.Pointer, _ uint32) int32{
c, cAllocMap := , cgoAllocsUnknown
cc, ccAllocMap := , cgoAllocsUnknown
ccc, cccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_memcmp(c, cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_printf function as declared in go-decklink/<builtin>:138
func __builtin_printf(_ string) int32{
 = safeString()
c, cAllocMap := unpackPString()
__ret := C.__builtin_printf(c)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_putc function as declared in go-decklink/<builtin>:139
func __builtin_putc(_ int32, _ unsafe.Pointer) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
ccc, cccAllocMap := , cgoAllocsUnknown
__ret := C.__builtin_putc(cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_putchar function as declared in go-decklink/<builtin>:140
func __builtin_putchar(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_putchar(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_puts function as declared in go-decklink/<builtin>:141
func __builtin_puts(_ string) int32{
 = safeString()
c, cAllocMap := unpackPString()
__ret := C.__builtin_puts(c)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_scanf function as declared in go-decklink/<builtin>:142
func __builtin_scanf(_ string) int32{
 = safeString()
c, cAllocMap := unpackPString()
__ret := C.__builtin_scanf(c)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_snprintf function as declared in go-decklink/<builtin>:143
func __builtin_snprintf(_ []byte, _ uint32, _ string) int32{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
cc, ccAllocMap := (C.ulong)(), cgoAllocsUnknown
 = safeString()
ccc, cccAllocMap := unpackPString()
__ret := C.__builtin_snprintf(c, cc, ccc)
runtime.KeepAlive()
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_sprintf function as declared in go-decklink/<builtin>:144
func __builtin_sprintf(_ []byte, _ string) int32{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_sprintf(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_sscanf function as declared in go-decklink/<builtin>:145
func __builtin_sscanf(_ string, _ string) int32{
 = safeString()
c, cAllocMap := unpackPString()
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_sscanf(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_strcmp function as declared in go-decklink/<builtin>:146
func __builtin_strcmp(_ string, _ string) int32{
 = safeString()
c, cAllocMap := unpackPString()
 = safeString()
cc, ccAllocMap := unpackPString()
__ret := C.__builtin_strcmp(c, cc)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_strncmp function as declared in go-decklink/<builtin>:147
func __builtin_strncmp(_ string, _ string, _ uint32) int32{
 = safeString()
c, cAllocMap := unpackPString()
 = safeString()
cc, ccAllocMap := unpackPString()
ccc, cccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_strncmp(c, cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_tolower function as declared in go-decklink/<builtin>:148
func __builtin_tolower(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_tolower(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_toupper function as declared in go-decklink/<builtin>:149
func __builtin_toupper(_ int32) int32{
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_toupper(cc)
runtime.KeepAlive(ccAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_vdprintf function as declared in go-decklink/<builtin>:150
func __builtin_vdprintf(_ int32, _ string, _ unsafe.Pointer) int32{
c, cAllocMap := (C.int)(), cgoAllocsUnknown
 = safeString()
cc, ccAllocMap := unpackPString()
ccc, cccAllocMap := , cgoAllocsUnknown
__ret := C.__builtin_vdprintf(c, cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_vfprintf function as declared in go-decklink/<builtin>:151
func __builtin_vfprintf(_ unsafe.Pointer, _ string, _ unsafe.Pointer) int32{
c, cAllocMap := , cgoAllocsUnknown
 = safeString()
cc, ccAllocMap := unpackPString()
ccc, cccAllocMap := , cgoAllocsUnknown
__ret := C.__builtin_vfprintf(c, cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_vfscanf function as declared in go-decklink/<builtin>:152
func __builtin_vfscanf(_ unsafe.Pointer, _ string, _ unsafe.Pointer) int32{
c, cAllocMap := , cgoAllocsUnknown
 = safeString()
cc, ccAllocMap := unpackPString()
ccc, cccAllocMap := , cgoAllocsUnknown
__ret := C.__builtin_vfscanf(c, cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_vprintf function as declared in go-decklink/<builtin>:153
func __builtin_vprintf(_ string, _ unsafe.Pointer) int32{
 = safeString()
c, cAllocMap := unpackPString()
cc, ccAllocMap := , cgoAllocsUnknown
__ret := C.__builtin_vprintf(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_vscanf function as declared in go-decklink/<builtin>:154
func __builtin_vscanf(_ string, _ unsafe.Pointer) int32{
 = safeString()
c, cAllocMap := unpackPString()
cc, ccAllocMap := , cgoAllocsUnknown
__ret := C.__builtin_vscanf(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_vsnprintf function as declared in go-decklink/<builtin>:155
func __builtin_vsnprintf(_ []byte, _ uint32, _ string, _ unsafe.Pointer) int32{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
cc, ccAllocMap := (C.ulong)(), cgoAllocsUnknown
 = safeString()
ccc, cccAllocMap := unpackPString()
cccc, ccccAllocMap := , cgoAllocsUnknown
__ret := C.__builtin_vsnprintf(c, cc, ccc, cccc)
runtime.KeepAlive(ccccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_vsprintf function as declared in go-decklink/<builtin>:156
func __builtin_vsprintf(_ []byte, _ string, _ unsafe.Pointer) int32{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
 = safeString()
cc, ccAllocMap := unpackPString()
ccc, cccAllocMap := , cgoAllocsUnknown
__ret := C.__builtin_vsprintf(c, cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_vsscanf function as declared in go-decklink/<builtin>:157
func __builtin_vsscanf(_ string, _ string, _ unsafe.Pointer) int32{
 = safeString()
c, cAllocMap := unpackPString()
 = safeString()
cc, ccAllocMap := unpackPString()
ccc, cccAllocMap := , cgoAllocsUnknown
__ret := C.__builtin_vsscanf(c, cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive()
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_expect function as declared in go-decklink/<builtin>:158
func __builtin_expect(_ int32, _ int32) int32{
c, cAllocMap := (C.long)(), cgoAllocsUnknown
cc, ccAllocMap := (C.long)(), cgoAllocsUnknown
__ret := C.__builtin_expect(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_labs function as declared in go-decklink/<builtin>:159
func __builtin_labs(_ int32) int32{
c, cAllocMap := (C.long)(), cgoAllocsUnknown
__ret := C.__builtin_labs(c)
runtime.KeepAlive(cAllocMap)
__v := (int32)(__ret)
return __v
}


// __builtin_acosl function as declared in go-decklink/<builtin>:160
func __builtin_acosl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_acosl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_asinl function as declared in go-decklink/<builtin>:161
func __builtin_asinl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_asinl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_atan2l function as declared in go-decklink/<builtin>:162
func __builtin_atan2l(_ float64, _ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_atan2l(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_atanl function as declared in go-decklink/<builtin>:163
func __builtin_atanl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_atanl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_ceill function as declared in go-decklink/<builtin>:165
func __builtin_ceill(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_ceill(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_copysignl function as declared in go-decklink/<builtin>:166
func __builtin_copysignl(_ float64, _ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_copysignl(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_coshl function as declared in go-decklink/<builtin>:167
func __builtin_coshl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_coshl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_cosl function as declared in go-decklink/<builtin>:168
func __builtin_cosl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_cosl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_expl function as declared in go-decklink/<builtin>:169
func __builtin_expl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_expl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_fabsl function as declared in go-decklink/<builtin>:170
func __builtin_fabsl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_fabsl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_floorl function as declared in go-decklink/<builtin>:171
func __builtin_floorl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_floorl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_fmodl function as declared in go-decklink/<builtin>:172
func __builtin_fmodl(_ float64, _ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_fmodl(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_frexpl function as declared in go-decklink/<builtin>:173
func __builtin_frexpl(_ float64, _ []int32) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
__ret := C.__builtin_frexpl(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_infl function as declared in go-decklink/<builtin>:174
func __builtin_infl() float64{
__ret := C.__builtin_infl()
__v := (float64)(__ret)
return __v
}


// __builtin_ldexpl function as declared in go-decklink/<builtin>:175
func __builtin_ldexpl(_ float64, _ int32) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_ldexpl(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_log10l function as declared in go-decklink/<builtin>:176
func __builtin_log10l(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_log10l(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_logl function as declared in go-decklink/<builtin>:177
func __builtin_logl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_logl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_modfl function as declared in go-decklink/<builtin>:178
func __builtin_modfl(_ float64, _ []float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
__ret := C.__builtin_modfl(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_nanl function as declared in go-decklink/<builtin>:179
func __builtin_nanl(_ []byte) float64{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
__ret := C.__builtin_nanl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_powl function as declared in go-decklink/<builtin>:180
func __builtin_powl(_ float64, _ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
cc, ccAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_powl(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_sinhl function as declared in go-decklink/<builtin>:181
func __builtin_sinhl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_sinhl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_sinl function as declared in go-decklink/<builtin>:182
func __builtin_sinl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_sinl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_sqrtl function as declared in go-decklink/<builtin>:183
func __builtin_sqrtl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_sqrtl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_tanhl function as declared in go-decklink/<builtin>:184
func __builtin_tanhl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_tanhl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_tanl function as declared in go-decklink/<builtin>:185
func __builtin_tanl(_ float64) float64{
c, cAllocMap := (C.double)(), cgoAllocsUnknown
__ret := C.__builtin_tanl(c)
runtime.KeepAlive(cAllocMap)
__v := (float64)(__ret)
return __v
}


// __builtin_llabs function as declared in go-decklink/<builtin>:186
func __builtin_llabs(_ int64) int64{
c, cAllocMap := (C.longlong)(), cgoAllocsUnknown
__ret := C.__builtin_llabs(c)
runtime.KeepAlive(cAllocMap)
__v := (int64)(__ret)
return __v
}


// __builtin___memcpy_chk function as declared in go-decklink/<builtin>:187
func __builtin___memcpy_chk(_ unsafe.Pointer, _ unsafe.Pointer, _ uint32, _ uint32) unsafe.Pointer{
c, cAllocMap := , cgoAllocsUnknown
cc, ccAllocMap := , cgoAllocsUnknown
ccc, cccAllocMap := (C.ulong)(), cgoAllocsUnknown
cccc, ccccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin___memcpy_chk(c, cc, ccc, cccc)
runtime.KeepAlive(ccccAllocMap)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin___memset_chk function as declared in go-decklink/<builtin>:188
func __builtin___memset_chk(_ unsafe.Pointer, _ int32, _ uint32, _ uint32) unsafe.Pointer{
cc, ccAllocMap := , cgoAllocsUnknown
ccc, cccAllocMap := (C.int)(), cgoAllocsUnknown
cccc, ccccAllocMap := (C.ulong)(), cgoAllocsUnknown
ccccc, cccccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin___memset_chk(cc, ccc, cccc, ccccc)
runtime.KeepAlive(cccccAllocMap)
runtime.KeepAlive(ccccAllocMap)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin___strncpy_chk function as declared in go-decklink/<builtin>:189
func __builtin___strncpy_chk(_ []byte, _ []byte, _ uint32, _ uint32) unsafe.Pointer{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
cc, ccAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
ccc, cccAllocMap := (C.ulong)(), cgoAllocsUnknown
cccc, ccccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin___strncpy_chk(c, cc, ccc, cccc)
runtime.KeepAlive(ccccAllocMap)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin__strncpy_chk function as declared in go-decklink/<builtin>:190
func __builtin__strncpy_chk(_ []byte, _ []byte, _ uint32, _ uint32) unsafe.Pointer{
c, cAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
cc, ccAllocMap := copyPBytes((*sliceHeader)(unsafe.Pointer(&)))
ccc, cccAllocMap := (C.ulong)(), cgoAllocsUnknown
cccc, ccccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin__strncpy_chk(c, cc, ccc, cccc)
runtime.KeepAlive(ccccAllocMap)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_calloc function as declared in go-decklink/<builtin>:191
func __builtin_calloc(_ uint32, _ uint32) unsafe.Pointer{
c, cAllocMap := (C.ulong)(), cgoAllocsUnknown
cc, ccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_calloc(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_malloc function as declared in go-decklink/<builtin>:192
func __builtin_malloc(_ uint32) unsafe.Pointer{
c, cAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_malloc(c)
runtime.KeepAlive(cAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_memchr function as declared in go-decklink/<builtin>:193
func __builtin_memchr(_ unsafe.Pointer, _ int32, _ uint32) unsafe.Pointer{
cc, ccAllocMap := , cgoAllocsUnknown
ccc, cccAllocMap := (C.int)(), cgoAllocsUnknown
cccc, ccccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_memchr(cc, ccc, cccc)
runtime.KeepAlive(ccccAllocMap)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_memcpy function as declared in go-decklink/<builtin>:194
func __builtin_memcpy(_ unsafe.Pointer, _ unsafe.Pointer, _ uint32) unsafe.Pointer{
c, cAllocMap := , cgoAllocsUnknown
cc, ccAllocMap := , cgoAllocsUnknown
ccc, cccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_memcpy(c, cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_memrchr function as declared in go-decklink/<builtin>:195
func __builtin_memrchr(_ unsafe.Pointer, _ int32, _ uint32) unsafe.Pointer{
cc, ccAllocMap := , cgoAllocsUnknown
ccc, cccAllocMap := (C.int)(), cgoAllocsUnknown
cccc, ccccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_memrchr(cc, ccc, cccc)
runtime.KeepAlive(ccccAllocMap)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_memset function as declared in go-decklink/<builtin>:196
func __builtin_memset(_ unsafe.Pointer, _ int32, _ uint32) unsafe.Pointer{
cc, ccAllocMap := , cgoAllocsUnknown
ccc, cccAllocMap := (C.int)(), cgoAllocsUnknown
cccc, ccccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_memset(cc, ccc, cccc)
runtime.KeepAlive(ccccAllocMap)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_rawmemchr function as declared in go-decklink/<builtin>:197
func __builtin_rawmemchr(_ unsafe.Pointer, _ int32) unsafe.Pointer{
cc, ccAllocMap := , cgoAllocsUnknown
ccc, cccAllocMap := (C.int)(), cgoAllocsUnknown
__ret := C.__builtin_rawmemchr(cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_realloc function as declared in go-decklink/<builtin>:198
func __builtin_realloc(_ unsafe.Pointer, _ uint32) unsafe.Pointer{
c, cAllocMap := , cgoAllocsUnknown
cc, ccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_realloc(c, cc)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_reallocarray function as declared in go-decklink/<builtin>:199
func __builtin_reallocarray(_ unsafe.Pointer, _ uint32, _ uint32) unsafe.Pointer{
c, cAllocMap := , cgoAllocsUnknown
cc, ccAllocMap := (C.ulong)(), cgoAllocsUnknown
ccc, cccAllocMap := (C.ulong)(), cgoAllocsUnknown
__ret := C.__builtin_reallocarray(c, cc, ccc)
runtime.KeepAlive(cccAllocMap)
runtime.KeepAlive(ccAllocMap)
runtime.KeepAlive(cAllocMap)
__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
return __v
}


// __builtin_abort function as declared in go-decklink/<builtin>:200
func __builtin_abort(){
C.__builtin_abort()
}


// __builtin_exit function as declared in go-decklink/<builtin>:201
func __builtin_exit(_ int32){
c, cAllocMap := (C.int)(), cgoAllocsUnknown
C.__builtin_exit(c)
runtime.KeepAlive(cAllocMap)
}


// __builtin_free function as declared in go-decklink/<builtin>:202
func __builtin_free(_ unsafe.Pointer){
c, cAllocMap := , cgoAllocsUnknown
C.__builtin_free(c)
runtime.KeepAlive(cAllocMap)
}


// __builtin_prefetch function as declared in go-decklink/<builtin>:203
func __builtin_prefetch(_ unsafe.Pointer){
c, cAllocMap := , cgoAllocsUnknown
C.__builtin_prefetch(c)
runtime.KeepAlive(cAllocMap)
}


// __builtin_unreachable function as declared in go-decklink/<builtin>:204
func __builtin_unreachable(){
C.__builtin_unreachable()
}


















